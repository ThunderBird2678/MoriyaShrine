Logging Infrastructure

In total, the software component of this project writes to four different files: img.jpg, output.txt, logfile.txt, and std.txt. img.jpg is the image read in from the webcam, output.txt contains the RGB values written to the LED, logfile.txt contains a standard log, and std.txt contains the values of a standard facial image, which is used in the facial detection algorithm.

Logging

Log statements written to logfile.txt may take on one of three levels of significance. Normal statements concerning the day-to-day operation of the project include outputting the location and dimensions of any faces or laser pointers detected, and the RGB values written to the LED. It also logs important function calls, such as to different image processing algorithms in the Image class, for debugging purposes. The second level includes warning statements, which are prefixed by "Warning: ". These will be logged if there is no face or laser pointer detected in the image. Finally, there are error statements, prefixed by "Error: ". These will be logged in the case of insufficient command line arguments, or failure to open a file. In every case, the log statement is prefixed by a timestamp, returned by the getCurrentTime() function in Main.cpp.

Standard Face Image

The standard face image is contained in std.txt. While it is used in facial detection, it also serves another purpose. While the Omega2 is not powerful enough to support true machine learning, I have implemented a very rudimentary form of machine learning where the algorithm can continuously self-improve as it makes more face detections. If a face is detected in the image, the average color of the face is found. A weighted average of these values and the original "standard" face color is done, which becomes the new face color to be used in filtering the next image. A similar operation is done on the image of the face. The previous image is updated with a weighted average of the new values. At the end, the updated image and color are written to the std.txt file, so these values can be reused when the program executes again. Ideally, if the user of our product scans many images of their face, the values in std.txt will resemble the user's own face more and more closely. This allows the face detection algorithm to continuously improve itself, without the need for external input - a basic form of unsupervised machine learning. 
